name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      releaseAsPrerelease:
        description: 'Release as Prerelease'
        required: true
        type: boolean
        default: false
      bumpByType:
        description: 'Bump by semver patch type'
        required: false
        type: choice
        options:
          - none
          - patch
          - minor
          - major
        default: 'none'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Build
        id: build
        run: |
          cargo build --release
          version=$(target/release/decky --version | cut -d " " -f 2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Upload binary
        uses: actions/upload-artifact@v3.1.2
        with:
          name: decky
          path: target/release/decky

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "target/release/decky"
          skipIfReleaseExists: true
          prerelease: ${{ github.event.inputs.releaseAsPrerelease || true }}
          artifactErrorsFailBuild: true
          artifactContentType: "application/octet-stream"
          tag: ${{ steps.build.outputs.version }}
